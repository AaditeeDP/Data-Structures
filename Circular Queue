Queue Data structure using Array

Circular Queue:

#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
#define MAX 3

 int rear = -1;
 int front = -1;
 int queue[MAX];

void insert(int queue[], int val)
{
    if((front == 0 && rear == MAX -1 )|| front - rear == 1 )
    {
        printf("OVERFLOW CONDITION \n");
    }
    
    else if (front == -1 && rear == -1)
    {
        front = 0;
        rear = 0;
        queue[rear] = val;
        
    }
    
    else if( rear == MAX -1 && front != 0)
    {
        rear = 0;
        queue[rear]= val;
    }
    
    else
    {
        rear = rear + 1;
        queue[rear] = val;
    }
    
}

void delete(int queue[])
{
    int val;
    if(front == -1 && rear == -1)
    {
        printf("UNDERFLOW CONDITION \n");
        
    }
    
    printf("The number that will be deleted is %d \n", queue[front]);
    
    if(front == rear)
    {
        front = -1;
        rear = -1;
    }
    
    else if(front == MAX - 1)
    {
        front = 0;
    }
    
    else
    {
        front = front + 1;
    }
    
}

void display(int queue[])
{
    int i;
    printf("\n");
    
    if (front > rear)
    {
        for (i = front; i < MAX ; i++)
        {
            printf("%d ", queue[i]);
        }
        
        for (i = 0; i <= rear; i++)
        {
            printf("%d ", queue[i]);
        }
        
    }
    else
    {
        for (i = front; i <= rear; i++)
            printf("%d ", queue[i]);
    }
    printf("\n");
}

int main()
{
    int val, option;
    int queue[MAX];
    printf("-------------------IMPLEMENTATION OF CIRCULAR QUEUE USING ARRAY------------------- \n");
    do
    {
        printf("The operations that can be performed: \n");
        printf(" 1. Insert \n 2. Delete \n 3. Display \n 4. Exit \n");
        printf("Enter your choice: \n");
        scanf("%d",&option);
        
        switch(option)
        {
            case 1:
            printf("Enter the number to be added: \n");
            scanf("%d",&val);
            insert(queue, val);
            break;
            
            case 2:
            delete(queue);
            break;
            
            case 3:
            display(queue);
            break;
            
            case 4:
            printf("Exiting the program");
            return 0;
            
            default:
            printf("wrong operation number");
            
        }
    }while(option != 4);
    
}
